{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/login/login.guard.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { catchError, concatMap, map } from 'rxjs/operators';\nimport { of, from } from 'rxjs';\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    public router: Router\n  ) {}\n\n  canActivate() {\n    return from(this.authenticationService.getUser())\n    .pipe(\n      concatMap(user => {\n        if (user) { // user is the value returned from the local storage\n          return this.authenticationService.validateAuthToken(JSON.parse(user).token)\n            .pipe(\n              catchError(error => of(error)),\n              map(result => {\n                if (result.error) {\n                  // token is expired\n                  return true;\n                }\n                else {\n                  // user is logged in and token is valid\n                  var user_obj = JSON.parse(user);\n                  console.info('guard user');\n                  console.info(user_obj);\n                  console.info(user_obj.emploi_formation);\n                  if(user_obj.emploi_formation==\"formation\"){\n                    return this.router.parseUrl('/tabs/formations');\n                  }\n                  else{\n                    return this.router.parseUrl('/tabs');\n                  }\n                }\n              })\n            )\n        } else {\n          // there is no logged user\n          console.info('no user logged in');\n          return of(true);\n        }\n      })\n    );\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\nimport { LoginGuard } from './login.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage,\n    canActivate: [LoginGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage],\n  providers: [LoginGuard]\n})\nexport class LoginPageModule {}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { LoadingController, Platform, AlertController, ToastController } from '@ionic/angular';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { OffresEmploiService } from '../services/offres-emploi.service';\nimport { environment } from '../../environments/environment';\nimport OneSignal from 'onesignal-cordova-plugin';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  loginForm: FormGroup;\n  errorMessage: string;\n\n  constructor(\n    private platform: Platform, \n    private router: Router,\n    public loadingController: LoadingController,\n    public formBuilder: FormBuilder,\n    private alertCtrl: AlertController,\n    private toastCtrl: ToastController,\n    public authenticationService: AuthenticationService,\n    public offresEmploiService: OffresEmploiService\n  ) {}\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  async doLogin() {\n    console.info('inside doLogin');\n    const loading = await this.loadingController.create({\n      message: 'Veuillez patienter...'\n    });\n    await loading.present();\n\n    this.authenticationService.doLogin(this.loginForm.value.username, this.loginForm.value.password)\n    .subscribe(res => {\n    \n      console.info('res');\n      console.info(res);\n      \n      this.authenticationService.setUser({\n        token: res['token'],\n        username: this.loginForm.value.username,\n        displayname: res['user_display_name'],\n        email: res['user_email'],\n        firstname: res['user_firstname'],\n        lastname: res['user_lastname'],\n        telephone: res['user_telephone'],\n        code_postal: res['user_code_postal'],\n        inscrit_mission_locale: res['user_inscrit_mission_locale'],\n        conseiller: res['user_conseiller'],\n        secteur_activite: res['user_secteur_activite'],\n        emploi_formation: res['user_emploi_formation'],\n        recherche_en_cours: res['user_recherche_en_cours'],\n        user_id: res['user_id']\n      });\n      \n      //Send user ID to OneSignal\n      if (this.platform.is(\"capacitor\")) {\n          console.log('capacitor');\n          let externalUserId = res['user_id']; // You will supply the external user id to the OneSignal SDK\n          console.info('externalUserId : ' + externalUserId);\n          OneSignal.setExternalUserId(externalUserId);\n      } else {\n          console.log('not capacitor');\n      }\n          \n\n      loading.dismiss();\n      \n      //Set constants like Types de contrat, Secteurs d'activité...\n      console.info('set constants');\n      this.offresEmploiService.setSecteurs();\n      this.offresEmploiService.setTypesContrat();\n      this.offresEmploiService.setEtats();\n      \n      if( res['user_emploi_formation'] == \"formation\" ){\n        this.router.navigate(['/tabs/formations']);\n      }\n      else{\n        this.router.navigate(['/tabs']);\n      }\n      \n      \n    },\n    err => {\n      loading.dismiss();\n      this.errorMessage = \"Identifiant ou mot de passe invalide\";\n    })\n  }\n  \n  \n  async openPwReset() {\n    const alert = await this.alertCtrl.create({\n      header: 'Mot de passe oublié ?',\n      message: 'Entre ton email pour obtenir un nouveau mot de passe',\n      inputs: [\n        {\n          type: 'text',\n          name: 'user_email'\n        }\n      ],\n      buttons: [\n        {\n          role: 'cancel',\n          text: 'Annuler'\n        },\n        {\n          text: 'Renouveler mot de passe',\n          handler: (data) => {\n            this.resetPw(data['user_email']);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n  \n  resetPw(user_email) {\n    this.authenticationService.lostPassword(user_email).subscribe(\n      async res => {\n        const toast = await this.toastCtrl.create({\n          message: res['message'],\n          duration: 2000\n        });\n        toast.present();\n      },\n      err => {\n        this.showError(err);\n      }\n    );\n  }\n  \n  async showError(err) {\n    const alert = await this.alertCtrl.create({\n      header: \"Erreur\",\n      //subHeader: err.error.data.status,\n      message: err.error.message,\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n  \n  \n}"],"names":["Component","Router","Validators","FormBuilder","FormControl","LoadingController","Platform","AlertController","ToastController","AuthenticationService","OffresEmploiService","OneSignal","LoginPage","constructor","platform","router","loadingController","formBuilder","alertCtrl","toastCtrl","authenticationService","offresEmploiService","ngOnInit","loginForm","group","username","required","password","doLogin","console","info","loading","create","message","present","value","subscribe","res","setUser","token","displayname","email","firstname","lastname","telephone","code_postal","inscrit_mission_locale","conseiller","secteur_activite","emploi_formation","recherche_en_cours","user_id","is","log","externalUserId","setExternalUserId","dismiss","setSecteurs","setTypesContrat","setEtats","navigate","err","errorMessage","openPwReset","alert","header","inputs","type","name","buttons","role","text","handler","data","resetPw","user_email","lostPassword","toast","duration","showError","error","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}