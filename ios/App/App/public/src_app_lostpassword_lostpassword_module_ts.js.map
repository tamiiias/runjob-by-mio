{"version":3,"file":"src_app_lostpassword_lostpassword_module_ts.js","mappings":"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","sources":["./src/app/lostpassword/lostpassword-routing.module.ts","./src/app/lostpassword/lostpassword.module.ts","./src/app/lostpassword/lostpassword.page.ts","./src/app/services/authentication.service.ts","./node_modules/@capacitor/preferences/dist/esm/index.js"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LostpasswordPage } from './lostpassword.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LostpasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LostpasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { LostpasswordPageRoutingModule } from './lostpassword-routing.module';\nimport { LostpasswordPage } from './lostpassword.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LostpasswordPageRoutingModule\n  ],\n  declarations: [LostpasswordPage]\n})\nexport class LostpasswordPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { AuthenticationService } from '../services/authentication.service';\nimport { ToastController, AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-lostpassword',\n  templateUrl: './lostpassword.page.html',\n  styleUrls: ['./lostpassword.page.scss'],\n})\nexport class LostpasswordPage implements OnInit {\n\n\n  lostPasswordForm: FormGroup;\n  \n  constructor(\n    public formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private authenticationService: AuthenticationService,\n    private toastCtrl: ToastController,\n    private alertCtrl: AlertController,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    \n    var lostpassword_key = this.route.snapshot.params['lostpassword_key'];\n    var lostpassword_login = this.route.snapshot.params['lostpassword_login'];\n    \n    console.info(\"login : \" + lostpassword_login);\n    console.info(\"key : \" + lostpassword_key);\n    \n    this.lostPasswordForm = this.formBuilder.group({\n      login: [lostpassword_login, [Validators.required]],\n      rp_key: [lostpassword_key, [Validators.required]],\n      pass1: [\"\", [Validators.required]]\n    })\n    \n    \n  }\n  \n  submitForm() {\n      this.authenticationService.resetPassword(this.lostPasswordForm.value).subscribe(\n          async res => {\n            const alert = await this.alertCtrl.create({\n              header: \"SuccÃ¨s\",\n              //subHeader: err.error.data.status,\n              message: res['message'],\n              buttons: [\n                {\n                text: 'OK',\n                handler: () => {\n                  this.router.navigateByUrl('/login');\n                }\n              }]\n            });\n            await alert.present();\n          },\n          err => {\n            this.showError(err);\n          }\n      );\n  }\n  \n  async showError(err) {\n    const alert = await this.alertCtrl.create({\n      header: \"Erreur\",\n      //subHeader: err.error.data.status,\n      message: err.error.message,\n      buttons: [\n        {\n        text: 'OK',\n        handler: () => {\n          this.router.navigateByUrl('/login');\n        }\n      }]\n    });\n    await alert.present();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Preferences } from '@capacitor/preferences';\nimport { Plugins } from '@capacitor/core';\n\nimport { environment } from '../../environments/environment';\nimport { Subject, Observable, of, from } from 'rxjs';\nimport { map, catchError, concatMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private loggedUser: Subject<any> = new Subject<any>();\n\n  constructor(public http: HttpClient) {}\n\n  async getUser() {\n    const { value } = await Preferences.get({ key: 'user' });   \n    return value;\n  }\n  \n  async setUser(user: any) {\n    await Preferences.set({\n      key: 'user',\n      value: JSON.stringify(user)\n    });\n\n    this.loggedUser.next(JSON.stringify(user));\n  }\n\n  // check if user is logged in and token is valid\n  isLoggedIn(): Observable<boolean> {\n    return from(this.getUser())\n    .pipe(\n      concatMap(user => {\n        if (user) { // user is the value returned from the local Preferences\n          return this.validateAuthToken(JSON.parse(user).token)\n          .pipe(\n            catchError(error => of(error)),\n            map(result => {\n              if (result.error) {\n                // token is expired\n                return false;\n              }\n              else\n                // user is logged in and token is valid\n                return true;\n            })\n          )\n        } else {\n          // there is no logged user\n          console.info('there is no logged user');\n          return of(false);\n        }\n      })\n    );\n  }\n\n  loggedUserObservable(): Observable<boolean> {\n    return this.loggedUser.asObservable();\n  }\n\n  async logOut() {\n    await Preferences.remove({ key: 'user' });\n    this.loggedUser.next(null);\n  }\n\n  doLogin(username: string, password: string) {\n    return this.http.post(environment.wordpress.auth_url, {\n      username: username,\n      password: password\n    });\n  }\n\n  doRegister(userData: any) {\n    let header : HttpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\n    return this.http.post(environment.wordpress.api_url + 'users/register', userData, {headers: header});\n  }\n\n  updateUser(userData: any) {\n    let header : HttpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\n    return this.http.post(environment.wordpress.api_url + 'users/update', userData, {headers: header});\n  }\n\n  validateAuthToken(token: string) {\n    let header : HttpHeaders = new HttpHeaders({'Authorization': 'Bearer ' + token});\n    return this.http.post(environment.wordpress.auth_url + '/validate?token=' + token,\n      {}, {headers: header})\n  }\n  \n  lostPassword(user_email) {\n    return this.http.post(environment.wordpress.api_url + 'users/lostpassword', { email: user_email });\n  }\n  \n  resetPassword(data) {\n    let header : HttpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\n    return this.http.post(environment.wordpress.api_url + 'users/resetpassword', { login: data.login, rp_key: data.rp_key, pass1: data.pass1 }, {headers: header});\n  }\n  \n}","import { registerPlugin } from '@capacitor/core';\nconst Preferences = registerPlugin('Preferences', {\n    web: () => import('./web').then(m => new m.PreferencesWeb()),\n});\nexport * from './definitions';\nexport { Preferences };\n"],"names":["Component","ActivatedRoute","FormBuilder","Validators","AuthenticationService","ToastController","AlertController","Router","LostpasswordPage","constructor","formBuilder","route","authenticationService","toastCtrl","alertCtrl","router","ngOnInit","lostpassword_key","snapshot","params","lostpassword_login","console","info","lostPasswordForm","group","login","required","rp_key","pass1","submitForm","resetPassword","value","subscribe","res","alert","create","header","message","buttons","text","handler","navigateByUrl","present","err","showError","error","selector","template","Injectable","HttpClient","HttpHeaders","Preferences","environment","Subject","of","from","map","catchError","concatMap","http","getUser","get","key","setUser","user","set","JSON","stringify","loggedUser","next","isLoggedIn","pipe","validateAuthToken","parse","token","result","loggedUserObservable","asObservable","logOut","remove","doLogin","username","password","post","wordpress","auth_url","doRegister","userData","api_url","headers","updateUser","lostPassword","user_email","email","data","providedIn","registerPlugin","web","then","m","PreferencesWeb"],"sourceRoot":"webpack:///","x_google_ignoreList":[4]}