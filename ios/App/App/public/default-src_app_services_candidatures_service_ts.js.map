{"version":3,"file":"default-src_app_services_candidatures_service_ts.js","mappings":"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","sources":["./src/app/global-constants.ts","./src/app/services/authentication.service.ts","./src/app/services/candidatures.service.ts","./node_modules/@capacitor/preferences/dist/esm/index.js"],"sourcesContent":["export class GlobalConstants {\n\n    public static reload_offres_emploi_tab: boolean = true;\n\n    public static reload_formations_tab: boolean = true;\n    \n    public static reload_candidatures_tab: boolean = true;\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Preferences } from '@capacitor/preferences';\nimport { Plugins } from '@capacitor/core';\n\nimport { environment } from '../../environments/environment';\nimport { Subject, Observable, of, from } from 'rxjs';\nimport { map, catchError, concatMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private loggedUser: Subject<any> = new Subject<any>();\n\n  constructor(public http: HttpClient) {}\n\n  async getUser() {\n    const { value } = await Preferences.get({ key: 'user' });   \n    return value;\n  }\n  \n  async setUser(user: any) {\n    await Preferences.set({\n      key: 'user',\n      value: JSON.stringify(user)\n    });\n\n    this.loggedUser.next(JSON.stringify(user));\n  }\n\n  // check if user is logged in and token is valid\n  isLoggedIn(): Observable<boolean> {\n    return from(this.getUser())\n    .pipe(\n      concatMap(user => {\n        if (user) { // user is the value returned from the local Preferences\n          return this.validateAuthToken(JSON.parse(user).token)\n          .pipe(\n            catchError(error => of(error)),\n            map(result => {\n              if (result.error) {\n                // token is expired\n                return false;\n              }\n              else\n                // user is logged in and token is valid\n                return true;\n            })\n          )\n        } else {\n          // there is no logged user\n          console.info('there is no logged user');\n          return of(false);\n        }\n      })\n    );\n  }\n\n  loggedUserObservable(): Observable<boolean> {\n    return this.loggedUser.asObservable();\n  }\n\n  async logOut() {\n    await Preferences.remove({ key: 'user' });\n    this.loggedUser.next(null);\n  }\n\n  doLogin(username: string, password: string) {\n    return this.http.post(environment.wordpress.auth_url, {\n      username: username,\n      password: password\n    });\n  }\n\n  doRegister(userData: any) {\n    let header : HttpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\n    return this.http.post(environment.wordpress.api_url + 'users/register', userData, {headers: header});\n  }\n\n  updateUser(userData: any) {\n    let header : HttpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\n    return this.http.post(environment.wordpress.api_url + 'users/update', userData, {headers: header});\n  }\n\n  validateAuthToken(token: string) {\n    let header : HttpHeaders = new HttpHeaders({'Authorization': 'Bearer ' + token});\n    return this.http.post(environment.wordpress.auth_url + '/validate?token=' + token,\n      {}, {headers: header})\n  }\n  \n  lostPassword(user_email) {\n    return this.http.post(environment.wordpress.api_url + 'users/lostpassword', { email: user_email });\n  }\n  \n  resetPassword(data) {\n    let header : HttpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\n    return this.http.post(environment.wordpress.api_url + 'users/resetpassword', { login: data.login, rp_key: data.rp_key, pass1: data.pass1 }, {headers: header});\n  }\n  \n}","import { Injectable, OnInit } from '@angular/core';\nimport { Candidature } from '../models/candidature.model';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of, from } from 'rxjs';\n\n//import 'rxjs/add/observable/fromPromise';\n//import 'rxjs/add/operator/mergeMap';\n\nimport { shareReplay, map, mergeMap } from 'rxjs/operators';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { AlertController } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\nimport{ GlobalConstants } from '../global-constants';\n\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@awesome-cordova-plugins/file-transfer/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class CandidaturesService {\n  \n  cache$: Observable<any>;\n  user: any;\n  candidature: Observable<any>;\n  loading: any;\n  cv_file: any;\n  \n  constructor(private http: HttpClient,\n    private authenticationService: AuthenticationService,\n    public alertController: AlertController,\n    public loadingController: LoadingController,\n    public router: Router,\n    private transfer: FileTransfer){}\n    \n\n  fileTransfer: FileTransferObject = this.transfer.create();\n\n  get candidatures() {\n  \n    console.info('inside get candidatures()');\n    if (!this.cache$) {\n        return from(this.authenticationService.getUser()).pipe(mergeMap((user) => {\n            this.user = JSON.parse(user);\n            this.cache$ = this.http.get(environment.wordpress.api_url + 'candidature?author=' + this.user.user_id); \n            return this.cache$;\n        }));\n    }\n    return this.cache$;\n  }\n  \n  getCandidatureById(candidatureID: number): Observable<Candidature>{\n    return this.candidatures.pipe(map(candidatures => {\n        for (var key in candidatures) {\n            // skip loop if the property is from prototype\n            if (!candidatures.hasOwnProperty(key)) continue;\n\n            var obj = candidatures[key];\n            if(obj.id==candidatureID){\n                return obj;\n            }\n        }\n    }));\n  }\n  \n  async createCandidature(formValues: any){\n    \n    this.presentLoading();\n    \n    const siteURL = environment.wordpress.api_url + 'create/';\n    const siteURL_add_cv_to_candidature = environment.wordpress.api_url + 'add_cv_to_candidature/';\n    const postType = 'candidature';\n    \n    this.authenticationService.getUser()\n      .then(user => {\n        \n        this.user = JSON.parse(user);\n        const header_authorization = 'Bearer ' + this.user.token;\n        \n        const data = { //The data you want to send with the post request\n          title: 'Candidature de ' + formValues.nom + ' ' + formValues.prenom + ' à l\\'offre d\\'emploi vendeur conseil',\n          content: '',\n          status:'publish', //needed or the post sits in 'draft' status,\n          author: this.user.user_id,\n          \"meta\": {\n            \"wpcf-nom\": formValues.nom,\n            \"wpcf-prenom\": formValues.prenom,\n            \"_wpcf_belongs_offre-emploi_id\": formValues.offre_emploi_id  \n          },\n          \"relationship\": {\n            \"relationship\" : formValues.relationship,\n            \"parent\": formValues.parent_id\n          }\n        };\n\n        fetch(siteURL+postType, { //the javascript fetch API used to handle the http requests\n          method: 'POST',\n          body: JSON.stringify(data),\n          headers: { //the request will fail without both of these headers\n            \"Content-type\": \"application/json; charset=UTF-8\",\n            'Authorization': header_authorization\n          }\n        })\n        .then(response => {\n            this.loading.dismiss();\n            \n            \n            return response.text().then(text => { \n            \n                        \n                if(!JSON.parse(text).saved){\n                    this.presentAlertConfirm(formValues.offre_emploi_id, 'Erreur', JSON.parse(text).response, formValues.relationship);\n                }\n                else{\n                \n                    //Succès : on upload le cv s'il a été renseigné dans le formulaire\n                    if (typeof this.cv_file !== 'undefined') {\n                        \n                        let formData = new FormData();\n                        formData.append('cv_file', this.cv_file, this.cv_file.name);\n                        formData.append('id_candidature', JSON.parse(text).id_candidature);\n                        \n                        \n                        this.http.post(siteURL_add_cv_to_candidature, formData).subscribe((response) => {\n                          console.info(response);\n                        });\n                        \n                    }\n                    \n                \n                    //Vide cache des candidatures\n                    this.cache$ = of([]);\n                    GlobalConstants.reload_candidatures_tab = true;\n\n                    this.presentAlertConfirm(formValues.offre_emploi_id, 'Confirmation', JSON.parse(text).response, formValues.relationship);\n                    \n                }\n                \n            });\n            \n        })\n        .catch(error => console.info(error));    \n    });\n  }\n  \n  async presentLoading() {\n      this.loading = await this.loadingController.create({\n        message: 'Envoi en cours...',\n        duration: 5000\n      });\n      return await this.loading.present();\n  }\n  \n  \n  async presentAlertConfirm(offre_emploi_id, title, message, relationship) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: title,\n      message: message,\n      buttons: [\n        {\n          text: 'OK',\n          id: 'confirm-button',\n          handler: () => {\n            this.alertController.dismiss();\n            if(relationship==\"formation-candidature\"){\n                this.router.navigateByUrl(`/tabs/formations`);\n            }\n            else if(relationship==\"offre-emploi-candidature\"){\n                this.router.navigateByUrl(`/tabs/offres-emploi`);\n            }\n                \n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n  \n  getCandidatures(): Observable<Candidature[]>{\n    this.cache$ = of([]);\n    return from(this.authenticationService.getUser()).pipe(mergeMap((user) => {\n        this.user = JSON.parse(user);\n        this.cache$ = this.http.get(environment.wordpress.api_url + 'candidature?author=' + this.user.user_id); \n        return this.cache$;\n    }));\n    \n  }    \n  \n  \n}\n","import { registerPlugin } from '@capacitor/core';\nconst Preferences = registerPlugin('Preferences', {\n    web: () => import('./web').then(m => new m.PreferencesWeb()),\n});\nexport * from './definitions';\nexport { Preferences };\n"],"names":["Injectable","HttpClient","HttpHeaders","Preferences","environment","Subject","of","from","map","catchError","concatMap","AuthenticationService","constructor","http","getUser","value","get","key","setUser","user","set","JSON","stringify","loggedUser","next","isLoggedIn","pipe","validateAuthToken","parse","token","error","result","console","info","loggedUserObservable","asObservable","logOut","remove","doLogin","username","password","post","wordpress","auth_url","doRegister","userData","header","api_url","headers","updateUser","lostPassword","user_email","email","resetPassword","data","login","rp_key","pass1","providedIn","mergeMap","AlertController","LoadingController","Router","GlobalConstants","FileTransfer","CandidaturesService","authenticationService","alertController","loadingController","router","transfer","create","candidatures","cache$","user_id","getCandidatureById","candidatureID","hasOwnProperty","obj","id","createCandidature","formValues","presentLoading","siteURL","siteURL_add_cv_to_candidature","postType","then","header_authorization","title","nom","prenom","content","status","author","offre_emploi_id","relationship","parent_id","fetch","method","body","response","loading","dismiss","text","saved","presentAlertConfirm","cv_file","formData","FormData","append","name","id_candidature","subscribe","reload_candidatures_tab","catch","message","duration","present","alert","cssClass","buttons","handler","navigateByUrl","getCandidatures","registerPlugin","web","m","PreferencesWeb"],"sourceRoot":"webpack:///","x_google_ignoreList":[3]}